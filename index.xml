<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on JDi4Earth</title><link>https://jdi4earth.github.io/</link><description>Recent content in Home on JDi4Earth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 22 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://jdi4earth.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Julia Resources</title><link>https://jdi4earth.github.io/work/julia-resources/</link><pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate><guid>https://jdi4earth.github.io/work/julia-resources/</guid><description>Julia Differentiable Programming JuliaDiff is an informal organization which aims to unify and document packages written in Julia for evaluating derivatives. The technical features of Julia, namely, multiple dispatch, source code via reflection, JIT compilation, and first-class access to expression parsing make implementing and using techniques from automatic differentiation easier than ever before (in our biased opinion). A compilation of differentiation tools in Julia can be found on GitHub.</description></item><item><title>Project Overview</title><link>https://jdi4earth.github.io/research/overview/</link><pubDate>Wed, 28 Nov 2018 15:14:54 +1000</pubDate><guid>https://jdi4earth.github.io/research/overview/</guid><description>The role of differentiable programming in simulation-based science (SBS) and scientific machine learning (SciML) Understanding and quantifying parameter sensitivity of simulated systems, be they numerical models of physical systems or mathematical renderings of neural networks, are essential in SBS and SciML. They are key ingredients, e.g., in Bayesian inference (gradient-based optimization for parameter calibration and state estimation and model initialization; dynamical attribution; uncertainty quantification; observing system design), and neural network training.</description></item><item><title>Alan Edelman</title><link>https://jdi4earth.github.io/team/alan-edelman/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/alan-edelman/</guid><description/></item><item><title>Chris Rackauckas</title><link>https://jdi4earth.github.io/team/chris-rackauckas/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/chris-rackauckas/</guid><description/></item><item><title>Christophere N. Hill</title><link>https://jdi4earth.github.io/team/chris-hill/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/chris-hill/</guid><description/></item><item><title>Karen Willcox</title><link>https://jdi4earth.github.io/team/karen-willcox/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/karen-willcox/</guid><description/></item><item><title>Mathieu Morlighem</title><link>https://jdi4earth.github.io/team/mathieu-morlighem/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/mathieu-morlighem/</guid><description/></item><item><title>Michel Schanen</title><link>https://jdi4earth.github.io/team/michel-schanen/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/michel-schanen/</guid><description/></item><item><title>Nora Loose</title><link>https://jdi4earth.github.io/team/nora-loose/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/nora-loose/</guid><description/></item><item><title>Patrick Heimbach</title><link>https://jdi4earth.github.io/team/patrick-heimbach/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/patrick-heimbach/</guid><description/></item><item><title>Sri Hari Krishna Narayanan</title><link>https://jdi4earth.github.io/team/krishna-narayanan/</link><pubDate>Thu, 20 Dec 2018 13:44:30 +1000</pubDate><guid>https://jdi4earth.github.io/team/krishna-narayanan/</guid><description/></item><item><title>Simulation Codes</title><link>https://jdi4earth.github.io/work/earth-models/</link><pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate><guid>https://jdi4earth.github.io/work/earth-models/</guid><description>The project&amp;rsquo;s Earth system flagship application frameworks will demonstrate the various uses of derivative information for SBS and SciML in the context of (1) an open-source, AD-enabled ocean general circulation model, and (2) an open-source, AD-enabled ice flow model.
Ocean modeling Oceananigans.jl is a fast and friendly fluid flow solver written in Julia that can be run in 1-3 dimensions on CPUs and GPUs. It can simulate the incompressible Boussinesq equations, the shallow water equations, or the hydrostatic Boussinesq equations with a free surface.</description></item><item><title>Cyberinfrastructure Frameworks</title><link>https://jdi4earth.github.io/research/frameworks/</link><pubDate>Wed, 28 Nov 2018 15:15:34 +1000</pubDate><guid>https://jdi4earth.github.io/research/frameworks/</guid><description>Current AD capabilities in Julia We list here current efforts in the Julia community that have a certain continuity within projects. A comprehensive list is maintained at JuliaDiff.org.
ForwardDiff.jl is a forward differentiation tool implemented in an overloading fashion by doing a
datatype change. This data type is compatible with array types used for GPU computations, thus allowing transparent differentiation for GPUs. ReverseDiff.jl is a reverse or adjoint differentiation tool, commonly referred to as &amp;lsquo;backpropagation&amp;rsquo;
in deep learning.</description></item><item><title>Tutorials</title><link>https://jdi4earth.github.io/work/tutorials/</link><pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate><guid>https://jdi4earth.github.io/work/tutorials/</guid><description>Coming soon &amp;hellip;</description></item><item><title>Earth system model applications</title><link>https://jdi4earth.github.io/research/applications/</link><pubDate>Wed, 28 Nov 2018 15:15:34 +1000</pubDate><guid>https://jdi4earth.github.io/research/applications/</guid><description>For this project, we will consider flagship Earth system model applications, in which adjoints have had a demonstrable impact, and where convergence between SBS and SciML approaches hold the promise for producing transformative research. Differentiable programming and general-purpose AD will enable a range of derivative-based science applications, including formal model calibration, surrogate model training using machine learning, data assimilation for state estimation and model initialization, sensitivity analysis, uncertainty quantification, and quantitative observing system design.</description></item><item><title>JDi4Earth Kickoff</title><link>https://jdi4earth.github.io/blog/2021/09/jdi4earth-kickoff/</link><pubDate>Wed, 01 Sep 2021 10:26:40 +1000</pubDate><guid>https://jdi4earth.github.io/blog/2021/09/jdi4earth-kickoff/</guid><description>JDi4Earth held its Kickoff Meeting virtually, spread across three afternoons of September 1-3, 2021. The meeting served for project partners to get to know each other, present ideas, planned capabilities and existing tools, and share resources.
Day 1: AD &amp;amp; differentiable programming Goal of this first day is to present the current landscape and developments related to AD going on in the Julia world. Tools that have been discussed include Enzyme, Diffractor, … (Julia Lab, Julia Computing, ANL, …) A second theme is to showcase AD capabilities developed in Fortran for “physics-based” simulations.</description></item><item><title>Publications</title><link>https://jdi4earth.github.io/publications/</link><pubDate>Wed, 28 Nov 2018 15:15:34 +1000</pubDate><guid>https://jdi4earth.github.io/publications/</guid><description>2021 Loose, N., &amp;amp; Heimbach, P. (2021). Leveraging Uncertainty Quantification to Design Ocean Climate Observing Systems. Journal of Advances in Modeling Earth Systems, 13(4), 1-25. doi:10.1029/2020ms002386
Moses, W. S., Churavy, V., Paehler, L., Hueckelheim, J., Narayanan, S. H. K., Schanen, M., &amp;amp; Doerfert, J. (2021). Reverse-Mode Automatic Differentiation and Optimization of GPU Kernels via Enzyme. https://doi.org/10.1145/3458817.3476165
Rackauckas, C., Anantharaman, R., Edelman, A., Gowda, S., Gwozdz, M.</description></item><item><title>Success</title><link>https://jdi4earth.github.io/contact/success/</link><pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate><guid>https://jdi4earth.github.io/contact/success/</guid><description/></item></channel></rss>