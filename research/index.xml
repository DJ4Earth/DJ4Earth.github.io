<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Research on DJ4Earth</title><link>https://dj4earth.github.io/research/</link><description>Recent content in Research on DJ4Earth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 Feb 2018 11:52:18 +0700</lastBuildDate><atom:link href="https://dj4earth.github.io/research/index.xml" rel="self" type="application/rss+xml"/><item><title>Project Overview</title><link>https://dj4earth.github.io/research/overview/</link><pubDate>Wed, 28 Nov 2018 15:14:54 +1000</pubDate><guid>https://dj4earth.github.io/research/overview/</guid><description>The role of differentiable programming in simulation-based science (SBS) and scientific machine learning (SciML) Understanding and quantifying parameter sensitivity of simulated systems, be they numerical models of physical systems or mathematical renderings of neural networks, are essential in SBS and SciML. They are key ingredients, e.g., in Bayesian inference (gradient-based optimization for parameter calibration and state estimation and model initialization; dynamical attribution; uncertainty quantification; observing system design), and neural network training.</description></item><item><title>Cyberinfrastructure Frameworks</title><link>https://dj4earth.github.io/research/frameworks/</link><pubDate>Wed, 28 Nov 2018 15:15:34 +1000</pubDate><guid>https://dj4earth.github.io/research/frameworks/</guid><description>Current AD capabilities in Julia We list here current efforts in the Julia community that have a certain continuity within projects. A comprehensive list is maintained at JuliaDiff.org.
ForwardDiff.jl is a forward differentiation tool implemented in an overloading fashion by doing a
datatype change. This data type is compatible with array types used for GPU computations, thus allowing transparent differentiation for GPUs. ReverseDiff.jl is a reverse or adjoint differentiation tool, commonly referred to as &amp;lsquo;backpropagation&amp;rsquo;
in deep learning.</description></item><item><title>Earth system model applications</title><link>https://dj4earth.github.io/research/applications/</link><pubDate>Wed, 28 Nov 2018 15:15:34 +1000</pubDate><guid>https://dj4earth.github.io/research/applications/</guid><description>For this project, we will consider flagship Earth system model applications, in which adjoints have had a demonstrable impact, and where convergence between SBS and SciML approaches hold the promise for producing transformative research. Differentiable programming and general-purpose AD will enable a range of derivative-based science applications, including formal model calibration, surrogate model training using machine learning, data assimilation for state estimation and model initialization, sensitivity analysis, uncertainty quantification, and quantitative observing system design.</description></item></channel></rss>